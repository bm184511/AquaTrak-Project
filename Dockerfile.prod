# This code is proprietary to AquaTrak. Unauthorized use is strictly prohibited.

# =============================================================================
# PRODUCTION DOCKERFILE FOR AQUATRAK PLATFORM
# =============================================================================

# Stage 1: Backend Build
FROM python:3.11-slim as backend-builder

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    libgdal-dev \
    libgeos-dev \
    libproj-dev \
    gdal-bin \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend application code
COPY src/ ./src/
COPY scripts/ ./scripts/

# Stage 2: Frontend Build
FROM node:18-alpine as frontend-builder

WORKDIR /app/frontend

# Copy frontend package files
COPY src/frontend/package*.json ./

# Install frontend dependencies
RUN npm ci --only=production

# Copy frontend source code
COPY src/frontend/ ./

# Build frontend for production
RUN npm run build

# Stage 3: Production Runtime
FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    libpq5 \
    libgdal30 \
    libgeos-c1v5 \
    libproj22 \
    gdal-bin \
    nginx \
    supervisor \
    && rm -rf /var/lib/apt/lists/*

# Create app directory and user
RUN mkdir -p /app && \
    useradd --create-home --shell /bin/bash aquatrak && \
    chown -R aquatrak:aquatrak /app

WORKDIR /app

# Copy Python dependencies from builder
COPY --from=backend-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=backend-builder /usr/local/bin /usr/local/bin

# Copy backend application code
COPY --from=backend-builder /app/src ./src
COPY --from=backend-builder /app/scripts ./scripts

# Copy frontend build from builder
COPY --from=frontend-builder /app/frontend/build ./static

# Create necessary directories
RUN mkdir -p logs uploads static temp && \
    chown -R aquatrak:aquatrak /app

# Copy configuration files
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/entrypoint.sh /entrypoint.sh

# Make entrypoint executable
RUN chmod +x /entrypoint.sh

# Switch to non-root user
USER aquatrak

# Expose ports
EXPOSE 8000 80

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set entrypoint
ENTRYPOINT ["/entrypoint.sh"] 