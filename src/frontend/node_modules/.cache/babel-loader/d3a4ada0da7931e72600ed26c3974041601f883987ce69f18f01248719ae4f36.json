{"ast":null,"code":"import React,{useState}from'react';import{Box,Card,CardContent,Typography,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,Chip,TextField,Dialog,DialogTitle,DialogContent,DialogActions,FormControl,InputLabel,Select,MenuItem,Switch,FormControlLabel,Alert,Pagination,Avatar,Menu,MenuItem as MenuItemComponent}from'@mui/material';import{Add as AddIcon,Edit as EditIcon,Delete as DeleteIcon,MoreVert as MoreVertIcon,Search as SearchIcon,Refresh as RefreshIcon,Business as BusinessIcon}from'@mui/icons-material';import{useQuery,useQueryClient}from'react-query';import{adminAPI}from'../../../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OrganizationManagement=()=>{const[page,setPage]=useState(1);const[limit]=useState(20);const[search,setSearch]=useState('');const[typeFilter,setTypeFilter]=useState('');const[countryFilter,setCountryFilter]=useState('');const[openDialog,setOpenDialog]=useState(false);const[editingOrg,setEditingOrg]=useState(null);const[formData,setFormData]=useState({name:'',type:'private',country_code:'',address:'',contact_email:'',contact_phone:'',subscription_plan:'basic',is_active:true});const[anchorEl,setAnchorEl]=useState(null);const[selectedOrg,setSelectedOrg]=useState(null);const queryClient=useQueryClient();// Fetch organizations\nconst{data:orgsData,isLoading,error,refetch}=useQuery(['organizations',page,limit,search,typeFilter,countryFilter],()=>adminAPI.getOrganizations({page,limit,search:search||undefined,type:typeFilter||undefined,country:countryFilter||undefined}),{keepPreviousData:true});const handleOpenDialog=org=>{if(org){setEditingOrg(org);setFormData({name:org.name,type:org.type,country_code:org.country_code,address:org.address,contact_email:org.contact_email,contact_phone:org.contact_phone,subscription_plan:org.subscription_plan,is_active:org.is_active});}else{setEditingOrg(null);setFormData({name:'',type:'private',country_code:'',address:'',contact_email:'',contact_phone:'',subscription_plan:'basic',is_active:true});}setOpenDialog(true);};const handleCloseDialog=()=>{setOpenDialog(false);setEditingOrg(null);setFormData({name:'',type:'private',country_code:'',address:'',contact_email:'',contact_phone:'',subscription_plan:'basic',is_active:true});};const handleMenuOpen=(event,org)=>{setAnchorEl(event.currentTarget);setSelectedOrg(org);};const handleMenuClose=()=>{setAnchorEl(null);setSelectedOrg(null);};const getTypeColor=type=>{switch(type){case'government':return'primary';case'private':return'success';case'academic':return'info';case'nonprofit':return'warning';default:return'default';}};const getPlanColor=plan=>{switch(plan){case'premium':return'error';case'professional':return'warning';case'basic':return'success';default:return'default';}};const countries=[{code:'IR',name:'Iran'},{code:'US',name:'United States'},{code:'GB',name:'United Kingdom'},{code:'DE',name:'Germany'},{code:'FR',name:'France'},{code:'CA',name:'Canada'},{code:'AU',name:'Australia'},{code:'JP',name:'Japan'},{code:'CN',name:'China'},{code:'IN',name:'India'}];const organizationTypes=[{value:'government',label:'Government'},{value:'private',label:'Private Company'},{value:'academic',label:'Academic'},{value:'nonprofit',label:'Non-Profit'},{value:'research',label:'Research Institute'}];const subscriptionPlans=[{value:'basic',label:'Basic'},{value:'professional',label:'Professional'},{value:'premium',label:'Premium'},{value:'enterprise',label:'Enterprise'}];if(error){return/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:\"Failed to load organizations. Please try again.\"});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"h2\",children:\"Organization Management\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenDialog(),children:\"Add Organization\"})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,flexWrap:'wrap',alignItems:'center'},children:[/*#__PURE__*/_jsx(TextField,{label:\"Search\",variant:\"outlined\",size:\"small\",value:search,onChange:e=>setSearch(e.target.value),InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{sx:{mr:1,color:'text.secondary'}})},sx:{minWidth:200}}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:150},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type\"}),/*#__PURE__*/_jsxs(Select,{value:typeFilter,label:\"Type\",onChange:e=>setTypeFilter(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),organizationTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.value,children:type.label},type.value))]})]}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Country\"}),/*#__PURE__*/_jsxs(Select,{value:countryFilter,label:\"Country\",onChange:e=>setCountryFilter(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),countries.map(country=>/*#__PURE__*/_jsx(MenuItem,{value:country.code,children:country.name},country.code))]})]}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>refetch(),children:/*#__PURE__*/_jsx(RefreshIcon,{})})]})})}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Organization\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Country\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Plan\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Users\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Contact\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Created\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:isLoading?[...Array(5)].map((_,i)=>/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:9,children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Avatar,{sx:{width:32,height:32},children:/*#__PURE__*/_jsx(BusinessIcon,{})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:\"Loading...\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"loading@example.com\"})]})]})})},i)):orgsData===null||orgsData===void 0?void 0:orgsData.data.organizations.map(org=>{var _organizationTypes$fi,_countries$find,_subscriptionPlans$fi;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(Avatar,{sx:{width:32,height:32},children:org.name.charAt(0).toUpperCase()}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:org.name}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:org.address})]})]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:((_organizationTypes$fi=organizationTypes.find(t=>t.value===org.type))===null||_organizationTypes$fi===void 0?void 0:_organizationTypes$fi.label)||org.type,size:\"small\",color:getTypeColor(org.type)})}),/*#__PURE__*/_jsx(TableCell,{children:((_countries$find=countries.find(c=>c.code===org.country_code))===null||_countries$find===void 0?void 0:_countries$find.name)||org.country_code}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:((_subscriptionPlans$fi=subscriptionPlans.find(p=>p.value===org.subscription_plan))===null||_subscriptionPlans$fi===void 0?void 0:_subscriptionPlans$fi.label)||org.subscription_plan,size:\"small\",color:getPlanColor(org.subscription_plan)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[org.user_count,\" users\"]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:org.is_active?'Active':'Inactive',size:\"small\",color:org.is_active?'success':'default'})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:org.contact_email}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:org.contact_phone})]})}),/*#__PURE__*/_jsx(TableCell,{children:new Date(org.created_at).toLocaleDateString()}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>handleMenuOpen(e,org),children:/*#__PURE__*/_jsx(MoreVertIcon,{})})})]},org.id);})})]})}),(orgsData===null||orgsData===void 0?void 0:orgsData.data.pagination)&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mt:3},children:/*#__PURE__*/_jsx(Pagination,{count:orgsData.data.pagination.pages,page:page,onChange:(_,value)=>setPage(value),color:\"primary\"})}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editingOrg?'Edit Organization':'Add New Organization'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2,pt:1},children:[/*#__PURE__*/_jsx(TextField,{label:\"Organization Name\",value:formData.name,onChange:e=>setFormData({...formData,name:e.target.value}),required:true}),/*#__PURE__*/_jsxs(Box,{sx:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:2},children:[/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Type\"}),/*#__PURE__*/_jsx(Select,{value:formData.type,label:\"Type\",onChange:e=>setFormData({...formData,type:e.target.value}),children:organizationTypes.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.value,children:type.label},type.value))})]}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Country\"}),/*#__PURE__*/_jsx(Select,{value:formData.country_code,label:\"Country\",onChange:e=>setFormData({...formData,country_code:e.target.value}),children:countries.map(country=>/*#__PURE__*/_jsx(MenuItem,{value:country.code,children:country.name},country.code))})]})]}),/*#__PURE__*/_jsx(TextField,{label:\"Address\",value:formData.address,onChange:e=>setFormData({...formData,address:e.target.value}),multiline:true,rows:2}),/*#__PURE__*/_jsxs(Box,{sx:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:2},children:[/*#__PURE__*/_jsx(TextField,{label:\"Contact Email\",type:\"email\",value:formData.contact_email,onChange:e=>setFormData({...formData,contact_email:e.target.value}),required:true}),/*#__PURE__*/_jsx(TextField,{label:\"Contact Phone\",value:formData.contact_phone,onChange:e=>setFormData({...formData,contact_phone:e.target.value})})]}),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Subscription Plan\"}),/*#__PURE__*/_jsx(Select,{value:formData.subscription_plan,label:\"Subscription Plan\",onChange:e=>setFormData({...formData,subscription_plan:e.target.value}),children:subscriptionPlans.map(plan=>/*#__PURE__*/_jsx(MenuItem,{value:plan.value,children:plan.label},plan.value))})]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:formData.is_active,onChange:e=>setFormData({...formData,is_active:e.target.checked})}),label:\"Active\"})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,variant:\"contained\",children:editingOrg?'Update':'Create'})]})]}),/*#__PURE__*/_jsxs(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:handleMenuClose,children:[/*#__PURE__*/_jsxs(MenuItemComponent,{onClick:()=>{if(selectedOrg)handleOpenDialog(selectedOrg);handleMenuClose();},children:[/*#__PURE__*/_jsx(EditIcon,{sx:{mr:1}}),\"Edit\"]}),/*#__PURE__*/_jsxs(MenuItemComponent,{onClick:()=>{handleMenuClose();},sx:{color:'error.main'},children:[/*#__PURE__*/_jsx(DeleteIcon,{sx:{mr:1}}),\"Delete\"]})]})]});};export default OrganizationManagement;","map":{"version":3,"names":["React","useState","Box","Card","CardContent","Typography","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","Chip","TextField","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Alert","Pagination","Avatar","Menu","MenuItemComponent","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","MoreVert","MoreVertIcon","Search","SearchIcon","Refresh","RefreshIcon","Business","BusinessIcon","useQuery","useQueryClient","adminAPI","jsx","_jsx","jsxs","_jsxs","OrganizationManagement","page","setPage","limit","search","setSearch","typeFilter","setTypeFilter","countryFilter","setCountryFilter","openDialog","setOpenDialog","editingOrg","setEditingOrg","formData","setFormData","name","type","country_code","address","contact_email","contact_phone","subscription_plan","is_active","anchorEl","setAnchorEl","selectedOrg","setSelectedOrg","queryClient","data","orgsData","isLoading","error","refetch","getOrganizations","undefined","country","keepPreviousData","handleOpenDialog","org","handleCloseDialog","handleMenuOpen","event","currentTarget","handleMenuClose","getTypeColor","getPlanColor","plan","countries","code","organizationTypes","value","label","subscriptionPlans","severity","sx","mb","children","display","justifyContent","alignItems","variant","component","startIcon","onClick","gap","flexWrap","size","onChange","e","target","InputProps","startAdornment","mr","color","minWidth","map","align","Array","_","i","colSpan","width","height","fontWeight","organizations","_organizationTypes$fi","_countries$find","_subscriptionPlans$fi","charAt","toUpperCase","find","t","c","p","user_count","Date","created_at","toLocaleDateString","id","pagination","mt","count","pages","open","onClose","maxWidth","fullWidth","flexDirection","pt","required","gridTemplateColumns","multiline","rows","control","checked","Boolean"],"sources":["C:/AquaTrak-Project/src/frontend/src/pages/Admin/Organizations/OrganizationManagement.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Chip,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Alert,\n  Pagination,\n  Tooltip,\n  Avatar,\n  Menu,\n  MenuItem as MenuItemComponent,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  MoreVert as MoreVertIcon,\n  Search as SearchIcon,\n  Refresh as RefreshIcon,\n  Business as BusinessIcon,\n} from '@mui/icons-material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { adminAPI } from '../../../services/api';\nimport toast from 'react-hot-toast';\n\ninterface Organization {\n  id: string;\n  name: string;\n  type: string;\n  country_code: string;\n  address: string;\n  contact_email: string;\n  contact_phone: string;\n  subscription_plan: string;\n  is_active: boolean;\n  created_at: string;\n  user_count: number;\n}\n\ninterface OrganizationFormData {\n  name: string;\n  type: string;\n  country_code: string;\n  address: string;\n  contact_email: string;\n  contact_phone: string;\n  subscription_plan: string;\n  is_active: boolean;\n}\n\nconst OrganizationManagement: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [limit] = useState(20);\n  const [search, setSearch] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const [countryFilter, setCountryFilter] = useState('');\n  \n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingOrg, setEditingOrg] = useState<Organization | null>(null);\n  const [formData, setFormData] = useState<OrganizationFormData>({\n    name: '',\n    type: 'private',\n    country_code: '',\n    address: '',\n    contact_email: '',\n    contact_phone: '',\n    subscription_plan: 'basic',\n    is_active: true,\n  });\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [selectedOrg, setSelectedOrg] = useState<Organization | null>(null);\n\n  const queryClient = useQueryClient();\n\n  // Fetch organizations\n  const {\n    data: orgsData,\n    isLoading,\n    error,\n    refetch,\n  } = useQuery(\n    ['organizations', page, limit, search, typeFilter, countryFilter],\n    () => adminAPI.getOrganizations({\n      page,\n      limit,\n      search: search || undefined,\n      type: typeFilter || undefined,\n      country: countryFilter || undefined,\n    }),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  const handleOpenDialog = (org?: Organization) => {\n    if (org) {\n      setEditingOrg(org);\n      setFormData({\n        name: org.name,\n        type: org.type,\n        country_code: org.country_code,\n        address: org.address,\n        contact_email: org.contact_email,\n        contact_phone: org.contact_phone,\n        subscription_plan: org.subscription_plan,\n        is_active: org.is_active,\n      });\n    } else {\n      setEditingOrg(null);\n      setFormData({\n        name: '',\n        type: 'private',\n        country_code: '',\n        address: '',\n        contact_email: '',\n        contact_phone: '',\n        subscription_plan: 'basic',\n        is_active: true,\n      });\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingOrg(null);\n    setFormData({\n      name: '',\n      type: 'private',\n      country_code: '',\n      address: '',\n      contact_email: '',\n      contact_phone: '',\n      subscription_plan: 'basic',\n      is_active: true,\n    });\n  };\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>, org: Organization) => {\n    setAnchorEl(event.currentTarget);\n    setSelectedOrg(org);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedOrg(null);\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'government':\n        return 'primary';\n      case 'private':\n        return 'success';\n      case 'academic':\n        return 'info';\n      case 'nonprofit':\n        return 'warning';\n      default:\n        return 'default';\n    }\n  };\n\n  const getPlanColor = (plan: string) => {\n    switch (plan) {\n      case 'premium':\n        return 'error';\n      case 'professional':\n        return 'warning';\n      case 'basic':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n\n  const countries = [\n    { code: 'IR', name: 'Iran' },\n    { code: 'US', name: 'United States' },\n    { code: 'GB', name: 'United Kingdom' },\n    { code: 'DE', name: 'Germany' },\n    { code: 'FR', name: 'France' },\n    { code: 'CA', name: 'Canada' },\n    { code: 'AU', name: 'Australia' },\n    { code: 'JP', name: 'Japan' },\n    { code: 'CN', name: 'China' },\n    { code: 'IN', name: 'India' },\n  ];\n\n  const organizationTypes = [\n    { value: 'government', label: 'Government' },\n    { value: 'private', label: 'Private Company' },\n    { value: 'academic', label: 'Academic' },\n    { value: 'nonprofit', label: 'Non-Profit' },\n    { value: 'research', label: 'Research Institute' },\n  ];\n\n  const subscriptionPlans = [\n    { value: 'basic', label: 'Basic' },\n    { value: 'professional', label: 'Professional' },\n    { value: 'premium', label: 'Premium' },\n    { value: 'enterprise', label: 'Enterprise' },\n  ];\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ mb: 2 }}>\n        Failed to load organizations. Please try again.\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      {/* Header */}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h5\" component=\"h2\">\n          Organization Management\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => handleOpenDialog()}\n        >\n          Add Organization\n        </Button>\n      </Box>\n\n      {/* Filters */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', alignItems: 'center' }}>\n            <TextField\n              label=\"Search\"\n              variant=\"outlined\"\n              size=\"small\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n              InputProps={{\n                startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\n              }}\n              sx={{ minWidth: 200 }}\n            />\n            \n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel>Type</InputLabel>\n              <Select\n                value={typeFilter}\n                label=\"Type\"\n                onChange={(e) => setTypeFilter(e.target.value)}\n              >\n                <MenuItem value=\"\">All</MenuItem>\n                {organizationTypes.map((type) => (\n                  <MenuItem key={type.value} value={type.value}>\n                    {type.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n              <InputLabel>Country</InputLabel>\n              <Select\n                value={countryFilter}\n                label=\"Country\"\n                onChange={(e) => setCountryFilter(e.target.value)}\n              >\n                <MenuItem value=\"\">All</MenuItem>\n                {countries.map((country) => (\n                  <MenuItem key={country.code} value={country.code}>\n                    {country.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <IconButton onClick={() => refetch()}>\n              <RefreshIcon />\n            </IconButton>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {/* Organizations Table */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Organization</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Country</TableCell>\n              <TableCell>Plan</TableCell>\n              <TableCell>Users</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Contact</TableCell>\n              <TableCell>Created</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {isLoading ? (\n              [...Array(5)].map((_, i) => (\n                <TableRow key={i}>\n                  <TableCell colSpan={9}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                      <Avatar sx={{ width: 32, height: 32 }}>\n                        <BusinessIcon />\n                      </Avatar>\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          Loading...\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          loading@example.com\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : (\n              orgsData?.data.organizations.map((org: Organization) => (\n                <TableRow key={org.id}>\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                      <Avatar sx={{ width: 32, height: 32 }}>\n                        {org.name.charAt(0).toUpperCase()}\n                      </Avatar>\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          {org.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {org.address}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={organizationTypes.find(t => t.value === org.type)?.label || org.type}\n                      size=\"small\"\n                      color={getTypeColor(org.type) as any}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    {countries.find(c => c.code === org.country_code)?.name || org.country_code}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={subscriptionPlans.find(p => p.value === org.subscription_plan)?.label || org.subscription_plan}\n                      size=\"small\"\n                      color={getPlanColor(org.subscription_plan) as any}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"body2\">\n                      {org.user_count} users\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      label={org.is_active ? 'Active' : 'Inactive'}\n                      size=\"small\"\n                      color={org.is_active ? 'success' : 'default'}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        {org.contact_email}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {org.contact_phone}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {new Date(org.created_at).toLocaleDateString()}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => handleMenuOpen(e, org)}\n                    >\n                      <MoreVertIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Pagination */}\n      {orgsData?.data.pagination && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n          <Pagination\n            count={orgsData.data.pagination.pages}\n            page={page}\n            onChange={(_, value) => setPage(value)}\n            color=\"primary\"\n          />\n        </Box>\n      )}\n\n      {/* Organization Dialog */}\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {editingOrg ? 'Edit Organization' : 'Add New Organization'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, pt: 1 }}>\n            <TextField\n              label=\"Organization Name\"\n              value={formData.name}\n              onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n              required\n            />\n\n            <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2 }}>\n              <FormControl>\n                <InputLabel>Type</InputLabel>\n                <Select\n                  value={formData.type}\n                  label=\"Type\"\n                  onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n                >\n                  {organizationTypes.map((type) => (\n                    <MenuItem key={type.value} value={type.value}>\n                      {type.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <FormControl>\n                <InputLabel>Country</InputLabel>\n                <Select\n                  value={formData.country_code}\n                  label=\"Country\"\n                  onChange={(e) => setFormData({ ...formData, country_code: e.target.value })}\n                >\n                  {countries.map((country) => (\n                    <MenuItem key={country.code} value={country.code}>\n                      {country.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n\n            <TextField\n              label=\"Address\"\n              value={formData.address}\n              onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n              multiline\n              rows={2}\n            />\n\n            <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2 }}>\n              <TextField\n                label=\"Contact Email\"\n                type=\"email\"\n                value={formData.contact_email}\n                onChange={(e) => setFormData({ ...formData, contact_email: e.target.value })}\n                required\n              />\n              <TextField\n                label=\"Contact Phone\"\n                value={formData.contact_phone}\n                onChange={(e) => setFormData({ ...formData, contact_phone: e.target.value })}\n              />\n            </Box>\n\n            <FormControl>\n              <InputLabel>Subscription Plan</InputLabel>\n              <Select\n                value={formData.subscription_plan}\n                label=\"Subscription Plan\"\n                onChange={(e) => setFormData({ ...formData, subscription_plan: e.target.value })}\n              >\n                {subscriptionPlans.map((plan) => (\n                  <MenuItem key={plan.value} value={plan.value}>\n                    {plan.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={formData.is_active}\n                  onChange={(e) => setFormData({ ...formData, is_active: e.target.checked })}\n                />\n              }\n              label=\"Active\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button\n            onClick={handleCloseDialog}\n            variant=\"contained\"\n          >\n            {editingOrg ? 'Update' : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Organization Actions Menu */}\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n      >\n        <MenuItemComponent onClick={() => {\n          if (selectedOrg) handleOpenDialog(selectedOrg);\n          handleMenuClose();\n        }}>\n          <EditIcon sx={{ mr: 1 }} />\n          Edit\n        </MenuItemComponent>\n        <MenuItemComponent\n          onClick={() => {\n            handleMenuClose();\n          }}\n          sx={{ color: 'error.main' }}\n        >\n          <DeleteIcon sx={{ mr: 1 }} />\n          Delete\n        </MenuItemComponent>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default OrganizationManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}