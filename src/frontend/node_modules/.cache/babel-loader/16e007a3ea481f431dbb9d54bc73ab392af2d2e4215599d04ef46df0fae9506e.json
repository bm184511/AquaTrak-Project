{"ast":null,"code":"import axios from'axios';import{toast}from'react-hot-toast';// API Configuration\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const API_TIMEOUT=30000;// 30 seconds\n// Create axios instance\nconst apiClient=axios.create({baseURL:API_BASE_URL,timeout:API_TIMEOUT,headers:{'Content-Type':'application/json'}});// Request interceptor for adding auth token\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor for handling errors and token refresh\napiClient.interceptors.response.use(response=>{return response;},async error=>{var _error$response,_error$response2,_error$response2$data;const originalRequest=error.config;// Handle 401 Unauthorized errors\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refresh_token');if(refreshToken){const response=await axios.post(`${API_BASE_URL}/api/v1/auth/refresh`,{refresh_token:refreshToken});const{access_token}=response.data;localStorage.setItem('access_token',access_token);// Retry original request with new token\noriginalRequest.headers.Authorization=`Bearer ${access_token}`;return apiClient(originalRequest);}}catch(refreshError){// Refresh token failed, redirect to login\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');window.location.href='/login';return Promise.reject(refreshError);}}// Handle other errors\nconst errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message||'An error occurred';toast.error(errorMessage);return Promise.reject(error);});// Generic API response handler\nconst handleApiResponse=response=>{if(response.data.status==='success'){return response.data.data;}throw new Error(response.data.message||'API request failed');};// Generic API error handler\nconst handleApiError=error=>{if(axios.isAxiosError(error)){var _error$response3,_error$response3$data,_error$response4,_error$response4$data,_error$response5,_error$response5$data,_error$response6;const apiError={error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'API Error',message:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||error.message,details:(_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.details,status_code:((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status)||500,timestamp:new Date().toISOString()};throw apiError;}throw error;};// Authentication API\nexport const authAPI={login:async credentials=>{try{const response=await apiClient.post('/api/v1/auth/login',credentials);return handleApiResponse(response);}catch(error){return handleApiError(error);}},logout:async()=>{try{await apiClient.post('/api/v1/auth/logout');localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');}catch(error){// Even if logout fails, clear local storage\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');return handleApiError(error);}},refreshToken:async refreshToken=>{try{const response=await apiClient.post('/api/v1/auth/refresh',{refresh_token:refreshToken});return handleApiResponse(response);}catch(error){return handleApiError(error);}},getProfile:async()=>{try{const response=await apiClient.get('/api/v1/auth/profile');return handleApiResponse(response);}catch(error){return handleApiError(error);}},updateProfile:async userData=>{try{const response=await apiClient.put('/api/v1/auth/profile',userData);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Modules API\nexport const modulesAPI={getAll:async()=>{try{const response=await apiClient.get('/api/v1/modules');return handleApiResponse(response);}catch(error){return handleApiError(error);}},getById:async moduleId=>{try{const response=await apiClient.get(`/api/v1/modules/${moduleId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},updateConfig:async(moduleId,config)=>{try{const response=await apiClient.put(`/api/v1/modules/${moduleId}/config`,config);return handleApiResponse(response);}catch(error){return handleApiError(error);}},getStatus:async moduleId=>{try{const response=await apiClient.get(`/api/v1/modules/${moduleId}/status`);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Analysis API\nexport const analysisAPI={getAll:async filters=>{try{const params=new URLSearchParams();if(filters){Object.entries(filters).forEach(_ref=>{let[key,value]=_ref;if(value!==undefined&&value!==null){if(Array.isArray(value)){value.forEach(v=>params.append(key,v));}else{params.append(key,String(value));}}});}const response=await apiClient.get(`/api/v1/analysis?${params.toString()}`);return response.data;}catch(error){return handleApiError(error);}},getById:async analysisId=>{try{const response=await apiClient.get(`/api/v1/analysis/${analysisId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},create:async(moduleId,analysisData)=>{try{const response=await apiClient.post(`/api/v1/modules/${moduleId}/analysis`,analysisData);return handleApiResponse(response);}catch(error){return handleApiError(error);}},cancel:async analysisId=>{try{await apiClient.post(`/api/v1/analysis/${analysisId}/cancel`);}catch(error){return handleApiError(error);}},delete:async analysisId=>{try{await apiClient.delete(`/api/v1/analysis/${analysisId}`);}catch(error){return handleApiError(error);}}};// IoT Water Consumption API\nexport const iotAPI={getData:async(deviceId,filters)=>{try{const params=new URLSearchParams();if(deviceId)params.append('device_id',deviceId);if(filters){Object.entries(filters).forEach(_ref2=>{let[key,value]=_ref2;if(value!==undefined&&value!==null){params.append(key,String(value));}});}const response=await apiClient.get(`/api/v1/iot/water-consumption?${params.toString()}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},getAnalysis:async analysisId=>{try{const response=await apiClient.get(`/api/v1/iot/analysis/${analysisId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},runAnalysis:async parameters=>{try{const response=await apiClient.post('/api/v1/iot/analysis',parameters);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Environmental Health API\nexport const environmentalHealthAPI={getData:async filters=>{try{const params=new URLSearchParams();if(filters){Object.entries(filters).forEach(_ref3=>{let[key,value]=_ref3;if(value!==undefined&&value!==null){params.append(key,String(value));}});}const response=await apiClient.get(`/api/v1/environmental-health?${params.toString()}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},getAnalysis:async analysisId=>{try{const response=await apiClient.get(`/api/v1/environmental-health/analysis/${analysisId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},runAnalysis:async parameters=>{try{const response=await apiClient.post('/api/v1/environmental-health/analysis',parameters);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Urban Green Space API\nexport const greenSpaceAPI={getData:async filters=>{try{const params=new URLSearchParams();if(filters){Object.entries(filters).forEach(_ref4=>{let[key,value]=_ref4;if(value!==undefined&&value!==null){params.append(key,String(value));}});}const response=await apiClient.get(`/api/v1/urban-green-space?${params.toString()}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},getAnalysis:async analysisId=>{try{const response=await apiClient.get(`/api/v1/urban-green-space/analysis/${analysisId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},runAnalysis:async parameters=>{try{const response=await apiClient.post('/api/v1/urban-green-space/analysis',parameters);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Urban Water Network API\nexport const waterNetworkAPI={getData:async(networkId,filters)=>{try{const params=new URLSearchParams();if(networkId)params.append('network_id',networkId);if(filters){Object.entries(filters).forEach(_ref5=>{let[key,value]=_ref5;if(value!==undefined&&value!==null){params.append(key,String(value));}});}const response=await apiClient.get(`/api/v1/urban-water-network?${params.toString()}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},getAnalysis:async analysisId=>{try{const response=await apiClient.get(`/api/v1/urban-water-network/analysis/${analysisId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},runAnalysis:async parameters=>{try{const response=await apiClient.post('/api/v1/urban-water-network/analysis',parameters);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Alerts API\nexport const alertsAPI={getAll:async filters=>{try{const params=new URLSearchParams();if(filters){Object.entries(filters).forEach(_ref6=>{let[key,value]=_ref6;if(value!==undefined&&value!==null){if(Array.isArray(value)){value.forEach(v=>params.append(key,v));}else{params.append(key,String(value));}}});}const response=await apiClient.get(`/api/v1/alerts?${params.toString()}`);return response.data;}catch(error){return handleApiError(error);}},getById:async alertId=>{try{const response=await apiClient.get(`/api/v1/alerts/${alertId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},acknowledge:async alertId=>{try{const response=await apiClient.post(`/api/v1/alerts/${alertId}/acknowledge`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},resolve:async alertId=>{try{const response=await apiClient.post(`/api/v1/alerts/${alertId}/resolve`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},dismiss:async alertId=>{try{const response=await apiClient.post(`/api/v1/alerts/${alertId}/dismiss`);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Dashboards API\nexport const dashboardsAPI={getAll:async()=>{try{const response=await apiClient.get('/api/v1/dashboards');return handleApiResponse(response);}catch(error){return handleApiError(error);}},getById:async dashboardId=>{try{const response=await apiClient.get(`/api/v1/dashboards/${dashboardId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},create:async dashboardData=>{try{const response=await apiClient.post('/api/v1/dashboards',dashboardData);return handleApiResponse(response);}catch(error){return handleApiError(error);}},update:async(dashboardId,dashboardData)=>{try{const response=await apiClient.put(`/api/v1/dashboards/${dashboardId}`,dashboardData);return handleApiResponse(response);}catch(error){return handleApiError(error);}},delete:async dashboardId=>{try{await apiClient.delete(`/api/v1/dashboards/${dashboardId}`);}catch(error){return handleApiError(error);}}};// Organizations API\nexport const organizationsAPI={getCurrent:async()=>{try{const response=await apiClient.get('/api/v1/organizations/current');return handleApiResponse(response);}catch(error){return handleApiError(error);}},update:async organizationData=>{try{const response=await apiClient.put('/api/v1/organizations/current',organizationData);return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// System API\nexport const systemAPI={health:async()=>{try{const response=await apiClient.get('/health');return response.data;}catch(error){return handleApiError(error);}},dbInfo:async()=>{try{const response=await apiClient.get('/db/info');return response.data;}catch(error){return handleApiError(error);}}};// Admin API\nexport const adminAPI={// Dashboard\ngetDashboard:async()=>{try{const response=await apiClient.get('/api/v1/admin/dashboard');return handleApiResponse(response);}catch(error){return handleApiError(error);}},// User Management\ngetUsers:async params=>{try{const response=await apiClient.get('/api/v1/admin/users',{params});return handleApiResponse(response);}catch(error){return handleApiError(error);}},getUser:async userId=>{try{const response=await apiClient.get(`/api/v1/admin/users/${userId}`);return handleApiResponse(response);}catch(error){return handleApiError(error);}},createUser:async userData=>{try{const response=await apiClient.post('/api/v1/admin/users',userData);return handleApiResponse(response);}catch(error){return handleApiError(error);}},updateUser:async(userId,userData)=>{try{const response=await apiClient.put(`/api/v1/admin/users/${userId}`,userData);return handleApiResponse(response);}catch(error){return handleApiError(error);}},deleteUser:async userId=>{try{await apiClient.delete(`/api/v1/admin/users/${userId}`);}catch(error){return handleApiError(error);}},// Organization Management\ngetOrganizations:async params=>{try{const response=await apiClient.get('/api/v1/admin/organizations',{params});return handleApiResponse(response);}catch(error){return handleApiError(error);}},// System Monitoring\ngetSystemStatus:async()=>{try{const response=await apiClient.get('/api/v1/admin/system/status');return handleApiResponse(response);}catch(error){return handleApiError(error);}},getSystemPerformance:async()=>{try{const response=await apiClient.get('/api/v1/admin/system/performance');return handleApiResponse(response);}catch(error){return handleApiError(error);}},getSystemLogs:async params=>{try{const response=await apiClient.get('/api/v1/admin/system/logs',{params});return handleApiResponse(response);}catch(error){return handleApiError(error);}},// Data Management\ngetDataSources:async()=>{try{const response=await apiClient.get('/api/v1/admin/data/sources');return handleApiResponse(response);}catch(error){return handleApiError(error);}},getFileUploads:async params=>{try{const response=await apiClient.get('/api/v1/admin/data/uploads',{params});return handleApiResponse(response);}catch(error){return handleApiError(error);}},// Analytics\ngetUsageAnalytics:async params=>{try{const response=await apiClient.get('/api/v1/admin/analytics/usage',{params});return handleApiResponse(response);}catch(error){return handleApiError(error);}},getModuleAnalytics:async params=>{try{const response=await apiClient.get('/api/v1/admin/analytics/modules',{params});return handleApiResponse(response);}catch(error){return handleApiError(error);}}};// Export all API modules\nexport{apiClient,handleApiResponse,handleApiError};","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","API_TIMEOUT","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response2$data","originalRequest","status","_retry","refreshToken","post","refresh_token","access_token","data","setItem","refreshError","removeItem","window","location","href","errorMessage","message","handleApiResponse","Error","handleApiError","isAxiosError","_error$response3","_error$response3$data","_error$response4","_error$response4$data","_error$response5","_error$response5$data","_error$response6","apiError","details","status_code","timestamp","Date","toISOString","authAPI","login","credentials","logout","getProfile","get","updateProfile","userData","put","modulesAPI","getAll","getById","moduleId","updateConfig","getStatus","analysisAPI","filters","params","URLSearchParams","Object","entries","forEach","_ref","key","value","undefined","Array","isArray","v","append","String","toString","analysisId","analysisData","cancel","delete","iotAPI","getData","deviceId","_ref2","getAnalysis","runAnalysis","parameters","environmentalHealthAPI","_ref3","greenSpaceAPI","_ref4","waterNetworkAPI","networkId","_ref5","alertsAPI","_ref6","alertId","acknowledge","resolve","dismiss","dashboardsAPI","dashboardId","dashboardData","update","organizationsAPI","getCurrent","organizationData","systemAPI","health","dbInfo","adminAPI","getDashboard","getUsers","getUser","userId","createUser","updateUser","deleteUser","getOrganizations","getSystemStatus","getSystemPerformance","getSystemLogs","getDataSources","getFileUploads","getUsageAnalytics","getModuleAnalytics"],"sources":["C:/AquaTrak-Project/src/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { toast } from 'react-hot-toast';\nimport {\n  ApiResponse,\n  ApiError,\n  LoginRequest,\n  LoginResponse,\n  User,\n  Module,\n  AnalysisResult,\n  Alert,\n  Dashboard,\n  Organization,\n  DataFilter,\n  PaginatedResponse\n} from '../types/api';\n\n// API Configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nconst API_TIMEOUT = 30000; // 30 seconds\n\n// Create axios instance\nconst apiClient: AxiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for adding auth token\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for handling errors and token refresh\napiClient.interceptors.response.use(\n  (response: AxiosResponse) => {\n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n\n    // Handle 401 Unauthorized errors\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n          const response = await axios.post(`${API_BASE_URL}/api/v1/auth/refresh`, {\n            refresh_token: refreshToken,\n          });\n\n          const { access_token } = response.data;\n          localStorage.setItem('access_token', access_token);\n          \n          // Retry original request with new token\n          originalRequest.headers.Authorization = `Bearer ${access_token}`;\n          return apiClient(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh token failed, redirect to login\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n\n    // Handle other errors\n    const errorMessage = error.response?.data?.message || error.message || 'An error occurred';\n    toast.error(errorMessage);\n    \n    return Promise.reject(error);\n  }\n);\n\n// Generic API response handler\nconst handleApiResponse = <T>(response: AxiosResponse<ApiResponse<T>>): T => {\n  if (response.data.status === 'success') {\n    return response.data.data;\n  }\n  throw new Error(response.data.message || 'API request failed');\n};\n\n// Generic API error handler\nconst handleApiError = (error: any): never => {\n  if (axios.isAxiosError(error)) {\n    const apiError: ApiError = {\n      error: error.response?.data?.error || 'API Error',\n      message: error.response?.data?.message || error.message,\n      details: error.response?.data?.details,\n      status_code: error.response?.status || 500,\n      timestamp: new Date().toISOString(),\n    };\n    throw apiError;\n  }\n  throw error;\n};\n\n// Authentication API\nexport const authAPI = {\n  login: async (credentials: LoginRequest): Promise<LoginResponse> => {\n    try {\n      const response = await apiClient.post<ApiResponse<LoginResponse>>('/api/v1/auth/login', credentials);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  logout: async (): Promise<void> => {\n    try {\n      await apiClient.post('/api/v1/auth/logout');\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n    } catch (error) {\n      // Even if logout fails, clear local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n      return handleApiError(error);\n    }\n  },\n\n  refreshToken: async (refreshToken: string): Promise<{ access_token: string }> => {\n    try {\n      const response = await apiClient.post<ApiResponse<{ access_token: string }>>('/api/v1/auth/refresh', {\n        refresh_token: refreshToken,\n      });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getProfile: async (): Promise<User> => {\n    try {\n      const response = await apiClient.get<ApiResponse<User>>('/api/v1/auth/profile');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  updateProfile: async (userData: Partial<User>): Promise<User> => {\n    try {\n      const response = await apiClient.put<ApiResponse<User>>('/api/v1/auth/profile', userData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Modules API\nexport const modulesAPI = {\n  getAll: async (): Promise<Module[]> => {\n    try {\n      const response = await apiClient.get<ApiResponse<Module[]>>('/api/v1/modules');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getById: async (moduleId: string): Promise<Module> => {\n    try {\n      const response = await apiClient.get<ApiResponse<Module>>(`/api/v1/modules/${moduleId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  updateConfig: async (moduleId: string, config: any): Promise<Module> => {\n    try {\n      const response = await apiClient.put<ApiResponse<Module>>(`/api/v1/modules/${moduleId}/config`, config);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getStatus: async (moduleId: string): Promise<{ status: string; last_update: string }> => {\n    try {\n      const response = await apiClient.get<ApiResponse<{ status: string; last_update: string }>>(`/api/v1/modules/${moduleId}/status`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Analysis API\nexport const analysisAPI = {\n  getAll: async (filters?: DataFilter): Promise<PaginatedResponse<AnalysisResult>> => {\n    try {\n      const params = new URLSearchParams();\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            if (Array.isArray(value)) {\n              value.forEach(v => params.append(key, v));\n            } else {\n              params.append(key, String(value));\n            }\n          }\n        });\n      }\n\n      const response = await apiClient.get<PaginatedResponse<AnalysisResult>>(`/api/v1/analysis?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getById: async (analysisId: string): Promise<AnalysisResult> => {\n    try {\n      const response = await apiClient.get<ApiResponse<AnalysisResult>>(`/api/v1/analysis/${analysisId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  create: async (moduleId: string, analysisData: any): Promise<AnalysisResult> => {\n    try {\n      const response = await apiClient.post<ApiResponse<AnalysisResult>>(`/api/v1/modules/${moduleId}/analysis`, analysisData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  cancel: async (analysisId: string): Promise<void> => {\n    try {\n      await apiClient.post(`/api/v1/analysis/${analysisId}/cancel`);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  delete: async (analysisId: string): Promise<void> => {\n    try {\n      await apiClient.delete(`/api/v1/analysis/${analysisId}`);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// IoT Water Consumption API\nexport const iotAPI = {\n  getData: async (deviceId?: string, filters?: DataFilter): Promise<any[]> => {\n    try {\n      const params = new URLSearchParams();\n      if (deviceId) params.append('device_id', deviceId);\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            params.append(key, String(value));\n          }\n        });\n      }\n\n      const response = await apiClient.get<ApiResponse<any[]>>(`/api/v1/iot/water-consumption?${params.toString()}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getAnalysis: async (analysisId: string): Promise<any> => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>(`/api/v1/iot/analysis/${analysisId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  runAnalysis: async (parameters: any): Promise<AnalysisResult> => {\n    try {\n      const response = await apiClient.post<ApiResponse<AnalysisResult>>('/api/v1/iot/analysis', parameters);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Environmental Health API\nexport const environmentalHealthAPI = {\n  getData: async (filters?: DataFilter): Promise<any[]> => {\n    try {\n      const params = new URLSearchParams();\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            params.append(key, String(value));\n          }\n        });\n      }\n\n      const response = await apiClient.get<ApiResponse<any[]>>(`/api/v1/environmental-health?${params.toString()}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getAnalysis: async (analysisId: string): Promise<any> => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>(`/api/v1/environmental-health/analysis/${analysisId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  runAnalysis: async (parameters: any): Promise<AnalysisResult> => {\n    try {\n      const response = await apiClient.post<ApiResponse<AnalysisResult>>('/api/v1/environmental-health/analysis', parameters);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Urban Green Space API\nexport const greenSpaceAPI = {\n  getData: async (filters?: DataFilter): Promise<any[]> => {\n    try {\n      const params = new URLSearchParams();\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            params.append(key, String(value));\n          }\n        });\n      }\n\n      const response = await apiClient.get<ApiResponse<any[]>>(`/api/v1/urban-green-space?${params.toString()}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getAnalysis: async (analysisId: string): Promise<any> => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>(`/api/v1/urban-green-space/analysis/${analysisId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  runAnalysis: async (parameters: any): Promise<AnalysisResult> => {\n    try {\n      const response = await apiClient.post<ApiResponse<AnalysisResult>>('/api/v1/urban-green-space/analysis', parameters);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Urban Water Network API\nexport const waterNetworkAPI = {\n  getData: async (networkId?: string, filters?: DataFilter): Promise<any[]> => {\n    try {\n      const params = new URLSearchParams();\n      if (networkId) params.append('network_id', networkId);\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            params.append(key, String(value));\n          }\n        });\n      }\n\n      const response = await apiClient.get<ApiResponse<any[]>>(`/api/v1/urban-water-network?${params.toString()}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getAnalysis: async (analysisId: string): Promise<any> => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>(`/api/v1/urban-water-network/analysis/${analysisId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  runAnalysis: async (parameters: any): Promise<AnalysisResult> => {\n    try {\n      const response = await apiClient.post<ApiResponse<AnalysisResult>>('/api/v1/urban-water-network/analysis', parameters);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Alerts API\nexport const alertsAPI = {\n  getAll: async (filters?: DataFilter): Promise<PaginatedResponse<Alert>> => {\n    try {\n      const params = new URLSearchParams();\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            if (Array.isArray(value)) {\n              value.forEach(v => params.append(key, v));\n            } else {\n              params.append(key, String(value));\n            }\n          }\n        });\n      }\n\n      const response = await apiClient.get<PaginatedResponse<Alert>>(`/api/v1/alerts?${params.toString()}`);\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getById: async (alertId: string): Promise<Alert> => {\n    try {\n      const response = await apiClient.get<ApiResponse<Alert>>(`/api/v1/alerts/${alertId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  acknowledge: async (alertId: string): Promise<Alert> => {\n    try {\n      const response = await apiClient.post<ApiResponse<Alert>>(`/api/v1/alerts/${alertId}/acknowledge`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  resolve: async (alertId: string): Promise<Alert> => {\n    try {\n      const response = await apiClient.post<ApiResponse<Alert>>(`/api/v1/alerts/${alertId}/resolve`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  dismiss: async (alertId: string): Promise<Alert> => {\n    try {\n      const response = await apiClient.post<ApiResponse<Alert>>(`/api/v1/alerts/${alertId}/dismiss`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Dashboards API\nexport const dashboardsAPI = {\n  getAll: async (): Promise<Dashboard[]> => {\n    try {\n      const response = await apiClient.get<ApiResponse<Dashboard[]>>('/api/v1/dashboards');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getById: async (dashboardId: string): Promise<Dashboard> => {\n    try {\n      const response = await apiClient.get<ApiResponse<Dashboard>>(`/api/v1/dashboards/${dashboardId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  create: async (dashboardData: Partial<Dashboard>): Promise<Dashboard> => {\n    try {\n      const response = await apiClient.post<ApiResponse<Dashboard>>('/api/v1/dashboards', dashboardData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  update: async (dashboardId: string, dashboardData: Partial<Dashboard>): Promise<Dashboard> => {\n    try {\n      const response = await apiClient.put<ApiResponse<Dashboard>>(`/api/v1/dashboards/${dashboardId}`, dashboardData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  delete: async (dashboardId: string): Promise<void> => {\n    try {\n      await apiClient.delete(`/api/v1/dashboards/${dashboardId}`);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Organizations API\nexport const organizationsAPI = {\n  getCurrent: async (): Promise<Organization> => {\n    try {\n      const response = await apiClient.get<ApiResponse<Organization>>('/api/v1/organizations/current');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  update: async (organizationData: Partial<Organization>): Promise<Organization> => {\n    try {\n      const response = await apiClient.put<ApiResponse<Organization>>('/api/v1/organizations/current', organizationData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// System API\nexport const systemAPI = {\n  health: async (): Promise<any> => {\n    try {\n      const response = await apiClient.get('/health');\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  dbInfo: async (): Promise<any> => {\n    try {\n      const response = await apiClient.get('/db/info');\n      return response.data;\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Admin API\nexport const adminAPI = {\n  // Dashboard\n  getDashboard: async () => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/dashboard');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  // User Management\n  getUsers: async (params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    role?: string;\n    status?: string;\n    country?: string;\n  }) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/users', { params });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getUser: async (userId: string) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>(`/api/v1/admin/users/${userId}`);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  createUser: async (userData: any) => {\n    try {\n      const response = await apiClient.post<ApiResponse<any>>('/api/v1/admin/users', userData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  updateUser: async (userId: string, userData: any) => {\n    try {\n      const response = await apiClient.put<ApiResponse<any>>(`/api/v1/admin/users/${userId}`, userData);\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  deleteUser: async (userId: string) => {\n    try {\n      await apiClient.delete(`/api/v1/admin/users/${userId}`);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  // Organization Management\n  getOrganizations: async (params?: {\n    page?: number;\n    limit?: number;\n    search?: string;\n    type?: string;\n    country?: string;\n  }) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/organizations', { params });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  // System Monitoring\n  getSystemStatus: async () => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/system/status');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getSystemPerformance: async () => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/system/performance');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getSystemLogs: async (params?: {\n    page?: number;\n    limit?: number;\n    level?: string;\n    user_id?: string;\n    action?: string;\n  }) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/system/logs', { params });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  // Data Management\n  getDataSources: async () => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/data/sources');\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getFileUploads: async (params?: {\n    page?: number;\n    limit?: number;\n    status?: string;\n    user_id?: string;\n  }) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/data/uploads', { params });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  // Analytics\n  getUsageAnalytics: async (params?: { period?: string }) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/analytics/usage', { params });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n\n  getModuleAnalytics: async (params?: { period?: string }) => {\n    try {\n      const response = await apiClient.get<ApiResponse<any>>('/api/v1/admin/analytics/modules', { params });\n      return handleApiResponse(response);\n    } catch (error) {\n      return handleApiError(error);\n    }\n  },\n};\n\n// Export all API modules\nexport {\n  apiClient,\n  handleApiResponse,\n  handleApiError,\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}