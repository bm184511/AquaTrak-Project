{"ast":null,"code":"import React,{useState}from'react';import{Box,Grid,Card,CardContent,Typography,LinearProgress,Chip,Alert,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,IconButton,TextField,FormControl,InputLabel,Select,MenuItem,Pagination,Tooltip,Skeleton,Tabs,Tab}from'@mui/material';import{Refresh as RefreshIcon,CheckCircle as CheckCircleIcon,Warning as WarningIcon,Error as ErrorIcon,Info as InfoIcon,Search as SearchIcon}from'@mui/icons-material';import{useQuery}from'react-query';import{adminAPI}from'../../../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SystemMonitoring=()=>{const[tabValue,setTabValue]=useState(0);const[logPage,setLogPage]=useState(1);const[logLimit]=useState(50);const[logLevel,setLogLevel]=useState('');const[logUserId,setLogUserId]=useState('');const[logAction,setLogAction]=useState('');// System status query\nconst{data:systemStatus,isLoading:statusLoading,error:statusError,refetch:refetchStatus}=useQuery('systemStatus',()=>adminAPI.getSystemStatus(),{refetchInterval:10000// Refresh every 10 seconds\n});// Performance stats query\nconst{data:performanceStats,isLoading:performanceLoading,error:performanceError,refetch:refetchPerformance}=useQuery('systemPerformance',()=>adminAPI.getSystemPerformance(),{refetchInterval:30000// Refresh every 30 seconds\n});// System logs query\nconst{data:logsData,isLoading:logsLoading,error:logsError,refetch:refetchLogs}=useQuery(['systemLogs',logPage,logLimit,logLevel,logUserId,logAction],()=>adminAPI.getSystemLogs({page:logPage,limit:logLimit,level:logLevel||undefined,user_id:logUserId||undefined,action:logAction||undefined}),{keepPreviousData:true});const handleTabChange=(event,newValue)=>{setTabValue(newValue);};const getStatusColor=status=>{switch(status.toLowerCase()){case'healthy':return'success';case'warning':return'warning';case'error':return'error';default:return'default';}};const getStatusIcon=status=>{switch(status.toLowerCase()){case'healthy':return/*#__PURE__*/_jsx(CheckCircleIcon,{color:\"success\"});case'warning':return/*#__PURE__*/_jsx(WarningIcon,{color:\"warning\"});case'error':return/*#__PURE__*/_jsx(ErrorIcon,{color:\"error\"});default:return/*#__PURE__*/_jsx(InfoIcon,{color:\"disabled\"});}};const formatBytes=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB','TB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};const formatPercentage=value=>{return`${value.toFixed(1)}%`;};const getActionColor=action=>{if(action.includes('error')||action.includes('delete'))return'error';if(action.includes('warning')||action.includes('update'))return'warning';if(action.includes('create')||action.includes('login'))return'success';return'default';};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"h2\",children:\"System Monitoring\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',gap:1},children:/*#__PURE__*/_jsx(Tooltip,{title:\"Refresh Status\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>refetchStatus(),children:/*#__PURE__*/_jsx(RefreshIcon,{})})})})]}),systemStatus&&/*#__PURE__*/_jsxs(Alert,{severity:getStatusColor(systemStatus.data.status),icon:getStatusIcon(systemStatus.data.status),sx:{mb:3},children:[\"System Status: \",systemStatus.data.status.toUpperCase(),\" | Uptime: \",systemStatus.data.uptime]}),/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider',mb:3},children:/*#__PURE__*/_jsxs(Tabs,{value:tabValue,onChange:handleTabChange,children:[/*#__PURE__*/_jsx(Tab,{label:\"System Resources\"}),/*#__PURE__*/_jsx(Tab,{label:\"Performance\"}),/*#__PURE__*/_jsx(Tab,{label:\"System Logs\"})]})}),tabValue===0&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"CPU Usage\"}),statusLoading?/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Current Usage\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:formatPercentage((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.cpu_usage)||0)})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.cpu_usage)||0,color:((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.cpu_usage)||0)>80?'error':'primary',sx:{height:10,borderRadius:5}})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Memory Usage\"}),statusLoading?/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Current Usage\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:formatPercentage((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.memory_usage)||0)})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.memory_usage)||0,color:((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.memory_usage)||0)>80?'error':'primary',sx:{height:10,borderRadius:5}}),/*#__PURE__*/_jsx(Box,{sx:{mt:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Available: \",formatBytes((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.memory_available)||0),\" / Total: \",formatBytes((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.memory_total)||0)]})})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Disk Usage\"}),statusLoading?/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Current Usage\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:formatPercentage((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.disk_usage)||0)})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.disk_usage)||0,color:((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.disk_usage)||0)>80?'error':'primary',sx:{height:10,borderRadius:5}}),/*#__PURE__*/_jsx(Box,{sx:{mt:1},children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Free: \",formatBytes((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.disk_free)||0),\" / Total: \",formatBytes((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.disk_total)||0)]})})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Network Usage\"}),statusLoading?/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}):/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:1},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Bytes Sent\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:formatBytes((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.network_bytes_sent)||0)})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Bytes Received\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:formatBytes((systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.network_bytes_recv)||0)})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Active Connections\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:(systemStatus===null||systemStatus===void 0?void 0:systemStatus.data.active_connections)||0})]})]})]})})})]}),tabValue===1&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Database Performance\"}),performanceLoading?/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20})]}):/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Connection Pool Size\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:(performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.database.connection_pool_size)||0})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Active Connections\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:(performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.database.active_connections)||0})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Query Count\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:(performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.database.query_count)||0})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Average Query Time\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[((performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.database.avg_query_time)||0).toFixed(3),\"s\"]})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"API Performance\"}),performanceLoading?/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20}),/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20})]}):/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',gap:2},children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Requests per Hour\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:(performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.api.requests_per_hour)||0})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Average Response Time\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[((performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.api.avg_response_time)||0).toFixed(3),\"s\"]})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Error Rate\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:formatPercentage(((performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.api.error_rate)||0)*100)})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Module Performance\"}),performanceLoading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',gap:1},children:[...Array(5)].map((_,i)=>/*#__PURE__*/_jsx(Skeleton,{variant:\"rectangular\",height:20},i))}):/*#__PURE__*/_jsx(TableContainer,{children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Module\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Average Processing Time\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Total Analyses\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:Object.entries((performanceStats===null||performanceStats===void 0?void 0:performanceStats.data.modules)||{}).map(_ref=>{let[module,stats]=_ref;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{sx:{textTransform:'capitalize'},children:module.replace(/_/g,' ')}),/*#__PURE__*/_jsxs(TableCell,{children:[stats.avg_processing_time.toFixed(3),\"s\"]}),/*#__PURE__*/_jsx(TableCell,{children:stats.total_analyses})]},module);})})]})})]})})})]}),tabValue===2&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',gap:2,flexWrap:'wrap',alignItems:'center'},children:[/*#__PURE__*/_jsx(TextField,{label:\"Search\",variant:\"outlined\",size:\"small\",InputProps:{startAdornment:/*#__PURE__*/_jsx(SearchIcon,{sx:{mr:1,color:'text.secondary'}})},sx:{minWidth:200}}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Level\"}),/*#__PURE__*/_jsxs(Select,{value:logLevel,label:\"Level\",onChange:e=>setLogLevel(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"error\",children:\"Error\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"warning\",children:\"Warning\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"info\",children:\"Info\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"debug\",children:\"Debug\"})]})]}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:120},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Action\"}),/*#__PURE__*/_jsxs(Select,{value:logAction,label:\"Action\",onChange:e=>setLogAction(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"login\",children:\"Login\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"create\",children:\"Create\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"update\",children:\"Update\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"delete\",children:\"Delete\"})]})]}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>refetchLogs(),children:/*#__PURE__*/_jsx(RefreshIcon,{})})]})})}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Timestamp\"}),/*#__PURE__*/_jsx(TableCell,{children:\"User\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Action\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Resource\"}),/*#__PURE__*/_jsx(TableCell,{children:\"IP Address\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Details\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:logsLoading?[...Array(5)].map((_,i)=>/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:6,children:/*#__PURE__*/_jsx(Skeleton,{variant:\"text\"})})},i)):logsData===null||logsData===void 0?void 0:logsData.data.logs.map(log=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:new Date(log.created_at).toLocaleString()}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:log.user})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Chip,{label:log.action,size:\"small\",color:getActionColor(log.action)})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[log.resource,log.resource_id&&` (${log.resource_id})`]})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:log.ip_address||'-'})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{maxWidth:200},children:JSON.stringify(log.details)})})]},log.id))})]})}),(logsData===null||logsData===void 0?void 0:logsData.data.pagination)&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',mt:3},children:/*#__PURE__*/_jsx(Pagination,{count:logsData.data.pagination.pages,page:logPage,onChange:(_,value)=>setLogPage(value),color:\"primary\"})})]})]});};export default SystemMonitoring;","map":{"version":3,"names":["React","useState","Box","Grid","Card","CardContent","Typography","LinearProgress","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","TextField","FormControl","InputLabel","Select","MenuItem","Pagination","Tooltip","Skeleton","Tabs","Tab","Refresh","RefreshIcon","CheckCircle","CheckCircleIcon","Warning","WarningIcon","Error","ErrorIcon","Info","InfoIcon","Search","SearchIcon","useQuery","adminAPI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SystemMonitoring","tabValue","setTabValue","logPage","setLogPage","logLimit","logLevel","setLogLevel","logUserId","setLogUserId","logAction","setLogAction","data","systemStatus","isLoading","statusLoading","error","statusError","refetch","refetchStatus","getSystemStatus","refetchInterval","performanceStats","performanceLoading","performanceError","refetchPerformance","getSystemPerformance","logsData","logsLoading","logsError","refetchLogs","getSystemLogs","page","limit","level","undefined","user_id","action","keepPreviousData","handleTabChange","event","newValue","getStatusColor","status","toLowerCase","getStatusIcon","color","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatPercentage","value","getActionColor","includes","children","sx","display","justifyContent","alignItems","mb","variant","component","gap","title","onClick","severity","icon","toUpperCase","uptime","borderBottom","borderColor","onChange","label","container","spacing","item","xs","md","gutterBottom","height","cpu_usage","borderRadius","memory_usage","mt","memory_available","memory_total","disk_usage","disk_free","disk_total","flexDirection","network_bytes_sent","network_bytes_recv","active_connections","database","connection_pool_size","query_count","avg_query_time","api","requests_per_hour","avg_response_time","error_rate","Array","map","_","size","Object","entries","modules","_ref","module","stats","textTransform","replace","avg_processing_time","total_analyses","flexWrap","InputProps","startAdornment","mr","minWidth","e","target","colSpan","logs","Date","created_at","toLocaleString","fontWeight","user","resource","resource_id","ip_address","maxWidth","JSON","stringify","details","id","pagination","count","pages"],"sources":["C:/AquaTrak-Project/src/frontend/src/pages/Admin/Monitoring/SystemMonitoring.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  LinearProgress,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Pagination,\n  Tooltip,\n  Skeleton,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport {\n  Refresh as RefreshIcon,\n  CheckCircle as CheckCircleIcon,\n  Warning as WarningIcon,\n  Error as ErrorIcon,\n  Info as InfoIcon,\n  Search as SearchIcon,\n  FilterList as FilterIcon,\n} from '@mui/icons-material';\nimport { useQuery } from 'react-query';\nimport { adminAPI } from '../../../services/api';\n\ninterface SystemStatus {\n  status: string;\n  uptime: string;\n  cpu_usage: number;\n  memory_usage: number;\n  memory_available: number;\n  memory_total: number;\n  disk_usage: number;\n  disk_free: number;\n  disk_total: number;\n  network_bytes_sent: number;\n  network_bytes_recv: number;\n  active_connections: number;\n}\n\ninterface PerformanceStats {\n  database: {\n    connection_pool_size: number;\n    active_connections: number;\n    query_count: number;\n    avg_query_time: number;\n  };\n  api: {\n    requests_per_hour: number;\n    avg_response_time: number;\n    error_rate: number;\n  };\n  modules: Record<string, {\n    avg_processing_time: number;\n    total_analyses: number;\n  }>;\n}\n\ninterface AuditLog {\n  id: string;\n  action: string;\n  user: string;\n  resource: string;\n  resource_id: string;\n  details: any;\n  ip_address: string;\n  user_agent: string;\n  created_at: string;\n}\n\nconst SystemMonitoring: React.FC = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [logPage, setLogPage] = useState(1);\n  const [logLimit] = useState(50);\n  const [logLevel, setLogLevel] = useState('');\n  const [logUserId, setLogUserId] = useState('');\n  const [logAction, setLogAction] = useState('');\n\n  // System status query\n  const {\n    data: systemStatus,\n    isLoading: statusLoading,\n    error: statusError,\n    refetch: refetchStatus,\n  } = useQuery<{ status: string; data: SystemStatus }>(\n    'systemStatus',\n    () => adminAPI.getSystemStatus(),\n    {\n      refetchInterval: 10000, // Refresh every 10 seconds\n    }\n  );\n\n  // Performance stats query\n  const {\n    data: performanceStats,\n    isLoading: performanceLoading,\n    error: performanceError,\n    refetch: refetchPerformance,\n  } = useQuery<{ status: string; data: PerformanceStats }>(\n    'systemPerformance',\n    () => adminAPI.getSystemPerformance(),\n    {\n      refetchInterval: 30000, // Refresh every 30 seconds\n    }\n  );\n\n  // System logs query\n  const {\n    data: logsData,\n    isLoading: logsLoading,\n    error: logsError,\n    refetch: refetchLogs,\n  } = useQuery(\n    ['systemLogs', logPage, logLimit, logLevel, logUserId, logAction],\n    () => adminAPI.getSystemLogs({\n      page: logPage,\n      limit: logLimit,\n      level: logLevel || undefined,\n      user_id: logUserId || undefined,\n      action: logAction || undefined,\n    }),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'healthy':\n        return 'success';\n      case 'warning':\n        return 'warning';\n      case 'error':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'healthy':\n        return <CheckCircleIcon color=\"success\" />;\n      case 'warning':\n        return <WarningIcon color=\"warning\" />;\n      case 'error':\n        return <ErrorIcon color=\"error\" />;\n      default:\n        return <InfoIcon color=\"disabled\" />;\n    }\n  };\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatPercentage = (value: number) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  const getActionColor = (action: string) => {\n    if (action.includes('error') || action.includes('delete')) return 'error';\n    if (action.includes('warning') || action.includes('update')) return 'warning';\n    if (action.includes('create') || action.includes('login')) return 'success';\n    return 'default';\n  };\n\n  return (\n    <Box>\n      {/* Header */}\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n        <Typography variant=\"h5\" component=\"h2\">\n          System Monitoring\n        </Typography>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          <Tooltip title=\"Refresh Status\">\n            <IconButton onClick={() => refetchStatus()}>\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {/* System Status Alert */}\n      {systemStatus && (\n        <Alert\n          severity={getStatusColor(systemStatus.data.status) as any}\n          icon={getStatusIcon(systemStatus.data.status)}\n          sx={{ mb: 3 }}\n        >\n          System Status: {systemStatus.data.status.toUpperCase()} | \n          Uptime: {systemStatus.data.uptime}\n        </Alert>\n      )}\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={tabValue} onChange={handleTabChange}>\n          <Tab label=\"System Resources\" />\n          <Tab label=\"Performance\" />\n          <Tab label=\"System Logs\" />\n        </Tabs>\n      </Box>\n\n      {/* System Resources Tab */}\n      {tabValue === 0 && (\n        <Grid container spacing={3}>\n          {/* CPU Usage */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  CPU Usage\n                </Typography>\n                {statusLoading ? (\n                  <Skeleton variant=\"rectangular\" height={20} />\n                ) : (\n                  <>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                      <Typography variant=\"body2\">Current Usage</Typography>\n                      <Typography variant=\"body2\">\n                        {formatPercentage(systemStatus?.data.cpu_usage || 0)}\n                      </Typography>\n                    </Box>\n                    <LinearProgress\n                      variant=\"determinate\"\n                      value={systemStatus?.data.cpu_usage || 0}\n                      color={(systemStatus?.data.cpu_usage || 0) > 80 ? 'error' : 'primary'}\n                      sx={{ height: 10, borderRadius: 5 }}\n                    />\n                  </>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Memory Usage */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Memory Usage\n                </Typography>\n                {statusLoading ? (\n                  <Skeleton variant=\"rectangular\" height={20} />\n                ) : (\n                  <>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                      <Typography variant=\"body2\">Current Usage</Typography>\n                      <Typography variant=\"body2\">\n                        {formatPercentage(systemStatus?.data.memory_usage || 0)}\n                      </Typography>\n                    </Box>\n                    <LinearProgress\n                      variant=\"determinate\"\n                      value={systemStatus?.data.memory_usage || 0}\n                      color={(systemStatus?.data.memory_usage || 0) > 80 ? 'error' : 'primary'}\n                      sx={{ height: 10, borderRadius: 5 }}\n                    />\n                    <Box sx={{ mt: 1 }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Available: {formatBytes(systemStatus?.data.memory_available || 0)} / \n                        Total: {formatBytes(systemStatus?.data.memory_total || 0)}\n                      </Typography>\n                    </Box>\n                  </>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Disk Usage */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Disk Usage\n                </Typography>\n                {statusLoading ? (\n                  <Skeleton variant=\"rectangular\" height={20} />\n                ) : (\n                  <>\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                      <Typography variant=\"body2\">Current Usage</Typography>\n                      <Typography variant=\"body2\">\n                        {formatPercentage(systemStatus?.data.disk_usage || 0)}\n                      </Typography>\n                    </Box>\n                    <LinearProgress\n                      variant=\"determinate\"\n                      value={systemStatus?.data.disk_usage || 0}\n                      color={(systemStatus?.data.disk_usage || 0) > 80 ? 'error' : 'primary'}\n                      sx={{ height: 10, borderRadius: 5 }}\n                    />\n                    <Box sx={{ mt: 1 }}>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Free: {formatBytes(systemStatus?.data.disk_free || 0)} / \n                        Total: {formatBytes(systemStatus?.data.disk_total || 0)}\n                      </Typography>\n                    </Box>\n                  </>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Network Usage */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Network Usage\n                </Typography>\n                {statusLoading ? (\n                  <Skeleton variant=\"rectangular\" height={20} />\n                ) : (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Bytes Sent\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {formatBytes(systemStatus?.data.network_bytes_sent || 0)}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Bytes Received\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {formatBytes(systemStatus?.data.network_bytes_recv || 0)}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Active Connections\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {systemStatus?.data.active_connections || 0}\n                      </Typography>\n                    </Box>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {/* Performance Tab */}\n      {tabValue === 1 && (\n        <Grid container spacing={3}>\n          {/* Database Performance */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Database Performance\n                </Typography>\n                {performanceLoading ? (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <Skeleton variant=\"rectangular\" height={20} />\n                    <Skeleton variant=\"rectangular\" height={20} />\n                    <Skeleton variant=\"rectangular\" height={20} />\n                  </Box>\n                ) : (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Connection Pool Size\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {performanceStats?.data.database.connection_pool_size || 0}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Active Connections\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {performanceStats?.data.database.active_connections || 0}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Query Count\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {performanceStats?.data.database.query_count || 0}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Average Query Time\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {(performanceStats?.data.database.avg_query_time || 0).toFixed(3)}s\n                      </Typography>\n                    </Box>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* API Performance */}\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  API Performance\n                </Typography>\n                {performanceLoading ? (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <Skeleton variant=\"rectangular\" height={20} />\n                    <Skeleton variant=\"rectangular\" height={20} />\n                    <Skeleton variant=\"rectangular\" height={20} />\n                  </Box>\n                ) : (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Requests per Hour\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {performanceStats?.data.api.requests_per_hour || 0}\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Average Response Time\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {(performanceStats?.data.api.avg_response_time || 0).toFixed(3)}s\n                      </Typography>\n                    </Box>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Error Rate\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        {formatPercentage((performanceStats?.data.api.error_rate || 0) * 100)}\n                      </Typography>\n                    </Box>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n\n          {/* Module Performance */}\n          <Grid item xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Module Performance\n                </Typography>\n                {performanceLoading ? (\n                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                    {[...Array(5)].map((_, i) => (\n                      <Skeleton key={i} variant=\"rectangular\" height={20} />\n                    ))}\n                  </Box>\n                ) : (\n                  <TableContainer>\n                    <Table size=\"small\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Module</TableCell>\n                          <TableCell>Average Processing Time</TableCell>\n                          <TableCell>Total Analyses</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {Object.entries(performanceStats?.data.modules || {}).map(([module, stats]) => (\n                          <TableRow key={module}>\n                            <TableCell sx={{ textTransform: 'capitalize' }}>\n                              {module.replace(/_/g, ' ')}\n                            </TableCell>\n                            <TableCell>\n                              {stats.avg_processing_time.toFixed(3)}s\n                            </TableCell>\n                            <TableCell>\n                              {stats.total_analyses}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </TableContainer>\n                )}\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      )}\n\n      {/* System Logs Tab */}\n      {tabValue === 2 && (\n        <Box>\n          {/* Log Filters */}\n          <Card sx={{ mb: 3 }}>\n            <CardContent>\n              <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap', alignItems: 'center' }}>\n                <TextField\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  InputProps={{\n                    startAdornment: <SearchIcon sx={{ mr: 1, color: 'text.secondary' }} />,\n                  }}\n                  sx={{ minWidth: 200 }}\n                />\n                \n                <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n                  <InputLabel>Level</InputLabel>\n                  <Select\n                    value={logLevel}\n                    label=\"Level\"\n                    onChange={(e) => setLogLevel(e.target.value)}\n                  >\n                    <MenuItem value=\"\">All</MenuItem>\n                    <MenuItem value=\"error\">Error</MenuItem>\n                    <MenuItem value=\"warning\">Warning</MenuItem>\n                    <MenuItem value=\"info\">Info</MenuItem>\n                    <MenuItem value=\"debug\">Debug</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n                  <InputLabel>Action</InputLabel>\n                  <Select\n                    value={logAction}\n                    label=\"Action\"\n                    onChange={(e) => setLogAction(e.target.value)}\n                  >\n                    <MenuItem value=\"\">All</MenuItem>\n                    <MenuItem value=\"login\">Login</MenuItem>\n                    <MenuItem value=\"create\">Create</MenuItem>\n                    <MenuItem value=\"update\">Update</MenuItem>\n                    <MenuItem value=\"delete\">Delete</MenuItem>\n                  </Select>\n                </FormControl>\n\n                <IconButton onClick={() => refetchLogs()}>\n                  <RefreshIcon />\n                </IconButton>\n              </Box>\n            </CardContent>\n          </Card>\n\n          {/* Logs Table */}\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Timestamp</TableCell>\n                  <TableCell>User</TableCell>\n                  <TableCell>Action</TableCell>\n                  <TableCell>Resource</TableCell>\n                  <TableCell>IP Address</TableCell>\n                  <TableCell>Details</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {logsLoading ? (\n                  [...Array(5)].map((_, i) => (\n                    <TableRow key={i}>\n                      <TableCell colSpan={6}>\n                        <Skeleton variant=\"text\" />\n                      </TableCell>\n                    </TableRow>\n                  ))\n                ) : (\n                  logsData?.data.logs.map((log: AuditLog) => (\n                    <TableRow key={log.id}>\n                      <TableCell>\n                        {new Date(log.created_at).toLocaleString()}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          {log.user}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Chip\n                          label={log.action}\n                          size=\"small\"\n                          color={getActionColor(log.action) as any}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {log.resource}\n                          {log.resource_id && ` (${log.resource_id})`}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {log.ip_address || '-'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ maxWidth: 200 }}>\n                          {JSON.stringify(log.details)}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* Logs Pagination */}\n          {logsData?.data.pagination && (\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n              <Pagination\n                count={logsData.data.pagination.pages}\n                page={logPage}\n                onChange={(_, value) => setLogPage(value)}\n                color=\"primary\"\n              />\n            </Box>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default SystemMonitoring; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,GAAG,CACHC,IAAI,CACJC,IAAI,CACJC,WAAW,CACXC,UAAU,CACVC,cAAc,CACdC,IAAI,CACJC,KAAK,CACLC,KAAK,CACLC,SAAS,CACTC,SAAS,CACTC,cAAc,CACdC,SAAS,CACTC,QAAQ,CACRC,KAAK,CACLC,UAAU,CACVC,SAAS,CACTC,WAAW,CACXC,UAAU,CACVC,MAAM,CACNC,QAAQ,CACRC,UAAU,CACVC,OAAO,CACPC,QAAQ,CACRC,IAAI,CACJC,GAAG,KACE,eAAe,CACtB,OACEC,OAAO,GAAI,CAAAC,WAAW,CACtBC,WAAW,GAAI,CAAAC,eAAe,CAC9BC,OAAO,GAAI,CAAAC,WAAW,CACtBC,KAAK,GAAI,CAAAC,SAAS,CAClBC,IAAI,GAAI,CAAAC,QAAQ,CAChBC,MAAM,GAAI,CAAAC,UAAU,KAEf,qBAAqB,CAC5B,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,QAAQ,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBA+CjD,KAAM,CAAAC,gBAA0B,CAAGA,CAAA,GAAM,CACvC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGjD,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAACkD,OAAO,CAAEC,UAAU,CAAC,CAAGnD,QAAQ,CAAC,CAAC,CAAC,CACzC,KAAM,CAACoD,QAAQ,CAAC,CAAGpD,QAAQ,CAAC,EAAE,CAAC,CAC/B,KAAM,CAACqD,QAAQ,CAAEC,WAAW,CAAC,CAAGtD,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACuD,SAAS,CAAEC,YAAY,CAAC,CAAGxD,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACyD,SAAS,CAAEC,YAAY,CAAC,CAAG1D,QAAQ,CAAC,EAAE,CAAC,CAE9C;AACA,KAAM,CACJ2D,IAAI,CAAEC,YAAY,CAClBC,SAAS,CAAEC,aAAa,CACxBC,KAAK,CAAEC,WAAW,CAClBC,OAAO,CAAEC,aACX,CAAC,CAAG3B,QAAQ,CACV,cAAc,CACd,IAAMC,QAAQ,CAAC2B,eAAe,CAAC,CAAC,CAChC,CACEC,eAAe,CAAE,KAAO;AAC1B,CACF,CAAC,CAED;AACA,KAAM,CACJT,IAAI,CAAEU,gBAAgB,CACtBR,SAAS,CAAES,kBAAkB,CAC7BP,KAAK,CAAEQ,gBAAgB,CACvBN,OAAO,CAAEO,kBACX,CAAC,CAAGjC,QAAQ,CACV,mBAAmB,CACnB,IAAMC,QAAQ,CAACiC,oBAAoB,CAAC,CAAC,CACrC,CACEL,eAAe,CAAE,KAAO;AAC1B,CACF,CAAC,CAED;AACA,KAAM,CACJT,IAAI,CAAEe,QAAQ,CACdb,SAAS,CAAEc,WAAW,CACtBZ,KAAK,CAAEa,SAAS,CAChBX,OAAO,CAAEY,WACX,CAAC,CAAGtC,QAAQ,CACV,CAAC,YAAY,CAAEW,OAAO,CAAEE,QAAQ,CAAEC,QAAQ,CAAEE,SAAS,CAAEE,SAAS,CAAC,CACjE,IAAMjB,QAAQ,CAACsC,aAAa,CAAC,CAC3BC,IAAI,CAAE7B,OAAO,CACb8B,KAAK,CAAE5B,QAAQ,CACf6B,KAAK,CAAE5B,QAAQ,EAAI6B,SAAS,CAC5BC,OAAO,CAAE5B,SAAS,EAAI2B,SAAS,CAC/BE,MAAM,CAAE3B,SAAS,EAAIyB,SACvB,CAAC,CAAC,CACF,CACEG,gBAAgB,CAAE,IACpB,CACF,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAACC,KAA2B,CAAEC,QAAgB,GAAK,CACzEvC,WAAW,CAACuC,QAAQ,CAAC,CACvB,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIC,MAAc,EAAK,CACzC,OAAQA,MAAM,CAACC,WAAW,CAAC,CAAC,EAC1B,IAAK,SAAS,CACZ,MAAO,SAAS,CAClB,IAAK,SAAS,CACZ,MAAO,SAAS,CAClB,IAAK,OAAO,CACV,MAAO,OAAO,CAChB,QACE,MAAO,SAAS,CACpB,CACF,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIF,MAAc,EAAK,CACxC,OAAQA,MAAM,CAACC,WAAW,CAAC,CAAC,EAC1B,IAAK,SAAS,CACZ,mBAAOjD,IAAA,CAACZ,eAAe,EAAC+D,KAAK,CAAC,SAAS,CAAE,CAAC,CAC5C,IAAK,SAAS,CACZ,mBAAOnD,IAAA,CAACV,WAAW,EAAC6D,KAAK,CAAC,SAAS,CAAE,CAAC,CACxC,IAAK,OAAO,CACV,mBAAOnD,IAAA,CAACR,SAAS,EAAC2D,KAAK,CAAC,OAAO,CAAE,CAAC,CACpC,QACE,mBAAOnD,IAAA,CAACN,QAAQ,EAACyD,KAAK,CAAC,UAAU,CAAE,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIC,KAAa,EAAK,CACrC,GAAIA,KAAK,GAAK,CAAC,CAAE,MAAO,SAAS,CACjC,KAAM,CAAAC,CAAC,CAAG,IAAI,CACd,KAAM,CAAAC,KAAK,CAAG,CAAC,OAAO,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAC,CAC/C,KAAM,CAAAC,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAAC,CAAGI,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC,CACnD,MAAO,CAAAM,UAAU,CAAC,CAACP,KAAK,CAAGI,IAAI,CAACI,GAAG,CAACP,CAAC,CAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,CAAG,GAAG,CAAGP,KAAK,CAACC,CAAC,CAAC,CACzE,CAAC,CAED,KAAM,CAAAO,gBAAgB,CAAIC,KAAa,EAAK,CAC1C,MAAO,GAAGA,KAAK,CAACF,OAAO,CAAC,CAAC,CAAC,GAAG,CAC/B,CAAC,CAED,KAAM,CAAAG,cAAc,CAAIvB,MAAc,EAAK,CACzC,GAAIA,MAAM,CAACwB,QAAQ,CAAC,OAAO,CAAC,EAAIxB,MAAM,CAACwB,QAAQ,CAAC,QAAQ,CAAC,CAAE,MAAO,OAAO,CACzE,GAAIxB,MAAM,CAACwB,QAAQ,CAAC,SAAS,CAAC,EAAIxB,MAAM,CAACwB,QAAQ,CAAC,QAAQ,CAAC,CAAE,MAAO,SAAS,CAC7E,GAAIxB,MAAM,CAACwB,QAAQ,CAAC,QAAQ,CAAC,EAAIxB,MAAM,CAACwB,QAAQ,CAAC,OAAO,CAAC,CAAE,MAAO,SAAS,CAC3E,MAAO,SAAS,CAClB,CAAC,CAED,mBACEhE,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eAEFjE,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEC,UAAU,CAAE,QAAQ,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,eACzFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAAP,QAAA,CAAC,mBAExC,CAAY,CAAC,cACbnE,IAAA,CAACzC,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEM,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,cACnCnE,IAAA,CAACnB,OAAO,EAAC+F,KAAK,CAAC,gBAAgB,CAAAT,QAAA,cAC7BnE,IAAA,CAAC1B,UAAU,EAACuG,OAAO,CAAEA,CAAA,GAAMrD,aAAa,CAAC,CAAE,CAAA2C,QAAA,cACzCnE,IAAA,CAACd,WAAW,GAAE,CAAC,CACL,CAAC,CACN,CAAC,CACP,CAAC,EACH,CAAC,CAGLgC,YAAY,eACXhB,KAAA,CAACpC,KAAK,EACJgH,QAAQ,CAAE/B,cAAc,CAAC7B,YAAY,CAACD,IAAI,CAAC+B,MAAM,CAAS,CAC1D+B,IAAI,CAAE7B,aAAa,CAAChC,YAAY,CAACD,IAAI,CAAC+B,MAAM,CAAE,CAC9CoB,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,EACf,iBACgB,CAACjD,YAAY,CAACD,IAAI,CAAC+B,MAAM,CAACgC,WAAW,CAAC,CAAC,CAAC,aAC/C,CAAC9D,YAAY,CAACD,IAAI,CAACgE,MAAM,EAC5B,CACR,cAGDjF,IAAA,CAACzC,GAAG,EAAC6G,EAAE,CAAE,CAAEc,YAAY,CAAE,CAAC,CAAEC,WAAW,CAAE,SAAS,CAAEX,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,cAC1DjE,KAAA,CAACnB,IAAI,EAACiF,KAAK,CAAE1D,QAAS,CAAC8E,QAAQ,CAAExC,eAAgB,CAAAuB,QAAA,eAC/CnE,IAAA,CAAChB,GAAG,EAACqG,KAAK,CAAC,kBAAkB,CAAE,CAAC,cAChCrF,IAAA,CAAChB,GAAG,EAACqG,KAAK,CAAC,aAAa,CAAE,CAAC,cAC3BrF,IAAA,CAAChB,GAAG,EAACqG,KAAK,CAAC,aAAa,CAAE,CAAC,EACvB,CAAC,CACJ,CAAC,CAGL/E,QAAQ,GAAK,CAAC,eACbJ,KAAA,CAAC1C,IAAI,EAAC8H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAApB,QAAA,eAEzBnE,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,WAEtC,CAAY,CAAC,CACZ/C,aAAa,cACZpB,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAE9C1F,KAAA,CAAAE,SAAA,EAAA+D,QAAA,eACEjE,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,eACnEnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CAAC,eAAa,CAAY,CAAC,cACtDnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxBJ,gBAAgB,CAAC,CAAA7C,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAAC4E,SAAS,GAAI,CAAC,CAAC,CAC1C,CAAC,EACV,CAAC,cACN7F,IAAA,CAACpC,cAAc,EACb6G,OAAO,CAAC,aAAa,CACrBT,KAAK,CAAE,CAAA9C,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAAC4E,SAAS,GAAI,CAAE,CACzC1C,KAAK,CAAE,CAAC,CAAAjC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAAC4E,SAAS,GAAI,CAAC,EAAI,EAAE,CAAG,OAAO,CAAG,SAAU,CACtEzB,EAAE,CAAE,CAAEwB,MAAM,CAAE,EAAE,CAAEE,YAAY,CAAE,CAAE,CAAE,CACrC,CAAC,EACF,CACH,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAGP9F,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,cAEtC,CAAY,CAAC,CACZ/C,aAAa,cACZpB,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAE9C1F,KAAA,CAAAE,SAAA,EAAA+D,QAAA,eACEjE,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,eACnEnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CAAC,eAAa,CAAY,CAAC,cACtDnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxBJ,gBAAgB,CAAC,CAAA7C,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAAC8E,YAAY,GAAI,CAAC,CAAC,CAC7C,CAAC,EACV,CAAC,cACN/F,IAAA,CAACpC,cAAc,EACb6G,OAAO,CAAC,aAAa,CACrBT,KAAK,CAAE,CAAA9C,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAAC8E,YAAY,GAAI,CAAE,CAC5C5C,KAAK,CAAE,CAAC,CAAAjC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAAC8E,YAAY,GAAI,CAAC,EAAI,EAAE,CAAG,OAAO,CAAG,SAAU,CACzE3B,EAAE,CAAE,CAAEwB,MAAM,CAAE,EAAE,CAAEE,YAAY,CAAE,CAAE,CAAE,CACrC,CAAC,cACF9F,IAAA,CAACzC,GAAG,EAAC6G,EAAE,CAAE,CAAE4B,EAAE,CAAE,CAAE,CAAE,CAAA7B,QAAA,cACjBjE,KAAA,CAACvC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,EAAC,aACtC,CAACf,WAAW,CAAC,CAAAlC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACgF,gBAAgB,GAAI,CAAC,CAAC,CAAC,YAC3D,CAAC7C,WAAW,CAAC,CAAAlC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACiF,YAAY,GAAI,CAAC,CAAC,EAC/C,CAAC,CACV,CAAC,EACN,CACH,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAGPlG,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,YAEtC,CAAY,CAAC,CACZ/C,aAAa,cACZpB,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAE9C1F,KAAA,CAAAE,SAAA,EAAA+D,QAAA,eACEjE,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,eACnEnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CAAC,eAAa,CAAY,CAAC,cACtDnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxBJ,gBAAgB,CAAC,CAAA7C,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACkF,UAAU,GAAI,CAAC,CAAC,CAC3C,CAAC,EACV,CAAC,cACNnG,IAAA,CAACpC,cAAc,EACb6G,OAAO,CAAC,aAAa,CACrBT,KAAK,CAAE,CAAA9C,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACkF,UAAU,GAAI,CAAE,CAC1ChD,KAAK,CAAE,CAAC,CAAAjC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACkF,UAAU,GAAI,CAAC,EAAI,EAAE,CAAG,OAAO,CAAG,SAAU,CACvE/B,EAAE,CAAE,CAAEwB,MAAM,CAAE,EAAE,CAAEE,YAAY,CAAE,CAAE,CAAE,CACrC,CAAC,cACF9F,IAAA,CAACzC,GAAG,EAAC6G,EAAE,CAAE,CAAE4B,EAAE,CAAE,CAAE,CAAE,CAAA7B,QAAA,cACjBjE,KAAA,CAACvC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,EAAC,QAC3C,CAACf,WAAW,CAAC,CAAAlC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACmF,SAAS,GAAI,CAAC,CAAC,CAAC,YAC/C,CAAChD,WAAW,CAAC,CAAAlC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACoF,UAAU,GAAI,CAAC,CAAC,EAC7C,CAAC,CACV,CAAC,EACN,CACH,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAGPrG,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,eAEtC,CAAY,CAAC,CACZ/C,aAAa,cACZpB,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAE9C1F,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE3B,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,eAC5DjE,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,YAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxBf,WAAW,CAAC,CAAAlC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACsF,kBAAkB,GAAI,CAAC,CAAC,CAC9C,CAAC,EACV,CAAC,cACNrG,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,gBAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxBf,WAAW,CAAC,CAAAlC,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACuF,kBAAkB,GAAI,CAAC,CAAC,CAC9C,CAAC,EACV,CAAC,cACNtG,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,oBAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxB,CAAAjD,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAED,IAAI,CAACwF,kBAAkB,GAAI,CAAC,CACjC,CAAC,EACV,CAAC,EACH,CACN,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CACP,CAGAnG,QAAQ,GAAK,CAAC,eACbJ,KAAA,CAAC1C,IAAI,EAAC8H,SAAS,MAACC,OAAO,CAAE,CAAE,CAAApB,QAAA,eAEzBnE,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,sBAEtC,CAAY,CAAC,CACZvC,kBAAkB,cACjB1B,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE3B,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,eAC5DnE,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAC9C5F,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAC9C5F,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,EAC3C,CAAC,cAEN1F,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE3B,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,eAC5DjE,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,sBAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxB,CAAAxC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAACyF,QAAQ,CAACC,oBAAoB,GAAI,CAAC,CAChD,CAAC,EACV,CAAC,cACNzG,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,oBAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxB,CAAAxC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAACyF,QAAQ,CAACD,kBAAkB,GAAI,CAAC,CAC9C,CAAC,EACV,CAAC,cACNvG,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,aAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxB,CAAAxC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAACyF,QAAQ,CAACE,WAAW,GAAI,CAAC,CACvC,CAAC,EACV,CAAC,cACN1G,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,oBAEnD,CAAY,CAAC,cACbjE,KAAA,CAACvC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,EACxB,CAAC,CAAAxC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAACyF,QAAQ,CAACG,cAAc,GAAI,CAAC,EAAE/C,OAAO,CAAC,CAAC,CAAC,CAAC,GACpE,EAAY,CAAC,EACV,CAAC,EACH,CACN,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAGP9D,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAAAvB,QAAA,cACvBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,iBAEtC,CAAY,CAAC,CACZvC,kBAAkB,cACjB1B,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE3B,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,eAC5DnE,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAC9C5F,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,cAC9C5F,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,CAAE,CAAC,EAC3C,CAAC,cAEN1F,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE3B,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,eAC5DjE,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,mBAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxB,CAAAxC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAAC6F,GAAG,CAACC,iBAAiB,GAAI,CAAC,CACxC,CAAC,EACV,CAAC,cACN7G,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,uBAEnD,CAAY,CAAC,cACbjE,KAAA,CAACvC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,EACxB,CAAC,CAAAxC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAAC6F,GAAG,CAACE,iBAAiB,GAAI,CAAC,EAAElD,OAAO,CAAC,CAAC,CAAC,CAAC,GAClE,EAAY,CAAC,EACV,CAAC,cACN5D,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eACFnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAAC,YAEnD,CAAY,CAAC,cACbnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,CACxBJ,gBAAgB,CAAC,CAAC,CAAApC,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAAC6F,GAAG,CAACG,UAAU,GAAI,CAAC,EAAI,GAAG,CAAC,CAC3D,CAAC,EACV,CAAC,EACH,CACN,EACU,CAAC,CACV,CAAC,CACH,CAAC,cAGPjH,IAAA,CAACxC,IAAI,EAACgI,IAAI,MAACC,EAAE,CAAE,EAAG,CAAAtB,QAAA,cAChBnE,IAAA,CAACvC,IAAI,EAAA0G,QAAA,cACHjE,KAAA,CAACxC,WAAW,EAAAyG,QAAA,eACVnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,IAAI,CAACkB,YAAY,MAAAxB,QAAA,CAAC,oBAEtC,CAAY,CAAC,CACZvC,kBAAkB,cACjB5B,IAAA,CAACzC,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEiC,aAAa,CAAE,QAAQ,CAAE3B,GAAG,CAAE,CAAE,CAAE,CAAAR,QAAA,CAC3D,CAAC,GAAG+C,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,CAAE5D,CAAC,gBACtBxD,IAAA,CAAClB,QAAQ,EAAS2F,OAAO,CAAC,aAAa,CAACmB,MAAM,CAAE,EAAG,EAApCpC,CAAsC,CACtD,CAAC,CACC,CAAC,cAENxD,IAAA,CAAC9B,cAAc,EAAAiG,QAAA,cACbjE,KAAA,CAACnC,KAAK,EAACsJ,IAAI,CAAC,OAAO,CAAAlD,QAAA,eACjBnE,IAAA,CAAC7B,SAAS,EAAAgG,QAAA,cACRjE,KAAA,CAAC9B,QAAQ,EAAA+F,QAAA,eACPnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,yBAAuB,CAAW,CAAC,cAC9CnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,gBAAc,CAAW,CAAC,EAC7B,CAAC,CACF,CAAC,cACZnE,IAAA,CAAChC,SAAS,EAAAmG,QAAA,CACPmD,MAAM,CAACC,OAAO,CAAC,CAAA5F,gBAAgB,SAAhBA,gBAAgB,iBAAhBA,gBAAgB,CAAEV,IAAI,CAACuG,OAAO,GAAI,CAAC,CAAC,CAAC,CAACL,GAAG,CAACM,IAAA,MAAC,CAACC,MAAM,CAAEC,KAAK,CAAC,CAAAF,IAAA,oBACxEvH,KAAA,CAAC9B,QAAQ,EAAA+F,QAAA,eACPnE,IAAA,CAAC/B,SAAS,EAACmG,EAAE,CAAE,CAAEwD,aAAa,CAAE,YAAa,CAAE,CAAAzD,QAAA,CAC5CuD,MAAM,CAACG,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CACjB,CAAC,cACZ3H,KAAA,CAACjC,SAAS,EAAAkG,QAAA,EACPwD,KAAK,CAACG,mBAAmB,CAAChE,OAAO,CAAC,CAAC,CAAC,CAAC,GACxC,EAAW,CAAC,cACZ9D,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CACPwD,KAAK,CAACI,cAAc,CACZ,CAAC,GATCL,MAUL,CAAC,EACZ,CAAC,CACO,CAAC,EACP,CAAC,CACM,CACjB,EACU,CAAC,CACV,CAAC,CACH,CAAC,EACH,CACP,CAGApH,QAAQ,GAAK,CAAC,eACbJ,KAAA,CAAC3C,GAAG,EAAA4G,QAAA,eAEFnE,IAAA,CAACvC,IAAI,EAAC2G,EAAE,CAAE,CAAEI,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,cAClBnE,IAAA,CAACtC,WAAW,EAAAyG,QAAA,cACVjE,KAAA,CAAC3C,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEM,GAAG,CAAE,CAAC,CAAEqD,QAAQ,CAAE,MAAM,CAAEzD,UAAU,CAAE,QAAS,CAAE,CAAAJ,QAAA,eAC3EnE,IAAA,CAACzB,SAAS,EACR8G,KAAK,CAAC,QAAQ,CACdZ,OAAO,CAAC,UAAU,CAClB4C,IAAI,CAAC,OAAO,CACZY,UAAU,CAAE,CACVC,cAAc,cAAElI,IAAA,CAACJ,UAAU,EAACwE,EAAE,CAAE,CAAE+D,EAAE,CAAE,CAAC,CAAEhF,KAAK,CAAE,gBAAiB,CAAE,CAAE,CACvE,CAAE,CACFiB,EAAE,CAAE,CAAEgE,QAAQ,CAAE,GAAI,CAAE,CACvB,CAAC,cAEFlI,KAAA,CAAC1B,WAAW,EAAC6I,IAAI,CAAC,OAAO,CAACjD,EAAE,CAAE,CAAEgE,QAAQ,CAAE,GAAI,CAAE,CAAAjE,QAAA,eAC9CnE,IAAA,CAACvB,UAAU,EAAA0F,QAAA,CAAC,OAAK,CAAY,CAAC,cAC9BjE,KAAA,CAACxB,MAAM,EACLsF,KAAK,CAAErD,QAAS,CAChB0E,KAAK,CAAC,OAAO,CACbD,QAAQ,CAAGiD,CAAC,EAAKzH,WAAW,CAACyH,CAAC,CAACC,MAAM,CAACtE,KAAK,CAAE,CAAAG,QAAA,eAE7CnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,EAAE,CAAAG,QAAA,CAAC,KAAG,CAAU,CAAC,cACjCnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,OAAO,CAAAG,QAAA,CAAC,OAAK,CAAU,CAAC,cACxCnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,SAAS,CAAAG,QAAA,CAAC,SAAO,CAAU,CAAC,cAC5CnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,MAAM,CAAAG,QAAA,CAAC,MAAI,CAAU,CAAC,cACtCnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,OAAO,CAAAG,QAAA,CAAC,OAAK,CAAU,CAAC,EAClC,CAAC,EACE,CAAC,cAEdjE,KAAA,CAAC1B,WAAW,EAAC6I,IAAI,CAAC,OAAO,CAACjD,EAAE,CAAE,CAAEgE,QAAQ,CAAE,GAAI,CAAE,CAAAjE,QAAA,eAC9CnE,IAAA,CAACvB,UAAU,EAAA0F,QAAA,CAAC,QAAM,CAAY,CAAC,cAC/BjE,KAAA,CAACxB,MAAM,EACLsF,KAAK,CAAEjD,SAAU,CACjBsE,KAAK,CAAC,QAAQ,CACdD,QAAQ,CAAGiD,CAAC,EAAKrH,YAAY,CAACqH,CAAC,CAACC,MAAM,CAACtE,KAAK,CAAE,CAAAG,QAAA,eAE9CnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,EAAE,CAAAG,QAAA,CAAC,KAAG,CAAU,CAAC,cACjCnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,OAAO,CAAAG,QAAA,CAAC,OAAK,CAAU,CAAC,cACxCnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,QAAQ,CAAAG,QAAA,CAAC,QAAM,CAAU,CAAC,cAC1CnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,QAAQ,CAAAG,QAAA,CAAC,QAAM,CAAU,CAAC,cAC1CnE,IAAA,CAACrB,QAAQ,EAACqF,KAAK,CAAC,QAAQ,CAAAG,QAAA,CAAC,QAAM,CAAU,CAAC,EACpC,CAAC,EACE,CAAC,cAEdnE,IAAA,CAAC1B,UAAU,EAACuG,OAAO,CAAEA,CAAA,GAAM1C,WAAW,CAAC,CAAE,CAAAgC,QAAA,cACvCnE,IAAA,CAACd,WAAW,GAAE,CAAC,CACL,CAAC,EACV,CAAC,CACK,CAAC,CACV,CAAC,cAGPc,IAAA,CAAC9B,cAAc,EAACwG,SAAS,CAAErG,KAAM,CAAA8F,QAAA,cAC/BjE,KAAA,CAACnC,KAAK,EAAAoG,QAAA,eACJnE,IAAA,CAAC7B,SAAS,EAAAgG,QAAA,cACRjE,KAAA,CAAC9B,QAAQ,EAAA+F,QAAA,eACPnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,WAAS,CAAW,CAAC,cAChCnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,MAAI,CAAW,CAAC,cAC3BnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,UAAQ,CAAW,CAAC,cAC/BnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,YAAU,CAAW,CAAC,cACjCnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CAAC,SAAO,CAAW,CAAC,EACtB,CAAC,CACF,CAAC,cACZnE,IAAA,CAAChC,SAAS,EAAAmG,QAAA,CACPlC,WAAW,CACV,CAAC,GAAGiF,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,CAAE5D,CAAC,gBACrBxD,IAAA,CAAC5B,QAAQ,EAAA+F,QAAA,cACPnE,IAAA,CAAC/B,SAAS,EAACsK,OAAO,CAAE,CAAE,CAAApE,QAAA,cACpBnE,IAAA,CAAClB,QAAQ,EAAC2F,OAAO,CAAC,MAAM,CAAE,CAAC,CAClB,CAAC,EAHCjB,CAIL,CACX,CAAC,CAEFxB,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEf,IAAI,CAACuH,IAAI,CAACrB,GAAG,CAAExD,GAAa,eACpCzD,KAAA,CAAC9B,QAAQ,EAAA+F,QAAA,eACPnE,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,CACP,GAAI,CAAAsE,IAAI,CAAC9E,GAAG,CAAC+E,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC,CACjC,CAAC,cACZ3I,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,cACRnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACL,EAAE,CAAE,CAAEwE,UAAU,CAAE,GAAI,CAAE,CAAAzE,QAAA,CACjDR,GAAG,CAACkF,IAAI,CACC,CAAC,CACJ,CAAC,cACZ7I,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,cACRnE,IAAA,CAACnC,IAAI,EACHwH,KAAK,CAAE1B,GAAG,CAACjB,MAAO,CAClB2E,IAAI,CAAC,OAAO,CACZlE,KAAK,CAAEc,cAAc,CAACN,GAAG,CAACjB,MAAM,CAAS,CAC1C,CAAC,CACO,CAAC,cACZ1C,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,cACRjE,KAAA,CAACvC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAAAN,QAAA,EACxBR,GAAG,CAACmF,QAAQ,CACZnF,GAAG,CAACoF,WAAW,EAAI,KAAKpF,GAAG,CAACoF,WAAW,GAAG,EACjC,CAAC,CACJ,CAAC,cACZ/I,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,cACRnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAAAgB,QAAA,CAC/CR,GAAG,CAACqF,UAAU,EAAI,GAAG,CACZ,CAAC,CACJ,CAAC,cACZhJ,IAAA,CAAC/B,SAAS,EAAAkG,QAAA,cACRnE,IAAA,CAACrC,UAAU,EAAC8G,OAAO,CAAC,OAAO,CAACtB,KAAK,CAAC,gBAAgB,CAACiB,EAAE,CAAE,CAAE6E,QAAQ,CAAE,GAAI,CAAE,CAAA9E,QAAA,CACtE+E,IAAI,CAACC,SAAS,CAACxF,GAAG,CAACyF,OAAO,CAAC,CAClB,CAAC,CACJ,CAAC,GA/BCzF,GAAG,CAAC0F,EAgCT,CACX,CACF,CACQ,CAAC,EACP,CAAC,CACM,CAAC,CAGhB,CAAArH,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEf,IAAI,CAACqI,UAAU,gBACxBtJ,IAAA,CAACzC,GAAG,EAAC6G,EAAE,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAE0B,EAAE,CAAE,CAAE,CAAE,CAAA7B,QAAA,cAC5DnE,IAAA,CAACpB,UAAU,EACT2K,KAAK,CAAEvH,QAAQ,CAACf,IAAI,CAACqI,UAAU,CAACE,KAAM,CACtCnH,IAAI,CAAE7B,OAAQ,CACd4E,QAAQ,CAAEA,CAACgC,CAAC,CAAEpD,KAAK,GAAKvD,UAAU,CAACuD,KAAK,CAAE,CAC1Cb,KAAK,CAAC,SAAS,CAChB,CAAC,CACC,CACN,EACE,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9C,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}